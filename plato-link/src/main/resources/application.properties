spring.profiles.active=dev
spring.jackson.property-naming-strategy=SNAKE_CASE
spring.application.name=plato-link

# sharding-jdbc\u914D\u7F6E
# The result is approximately equal to 69.73 years. Apache ShardingSphere snowflake algorithm starts from November 1st, 2016, and can be used until 2086, which we believe can satisfy the requirement of most systems.
spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.ds0.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://${plato.datasource.host}:${plato.datasource.port}/plato_link?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds0.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds0.maxPoolSize=50
spring.shardingsphere.datasource.ds0.minPoolSize=50
spring.shardingsphere.datasource.ds0.password=${plato.datasource.username}
spring.shardingsphere.datasource.ds0.username=${plato.datasource.password}
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.props.sql.show=true
# \u914D\u7F6E\u77ED\u94FE\u8868id\u751F\u6210\u7B56\u7565
spring.shardingsphere.sharding.tables.link_group.key-generator.column=id
spring.shardingsphere.sharding.tables.link_group.key-generator.props.worker.id=${system.snowflake.worker-id}
spring.shardingsphere.sharding.tables.link_group.key-generator.type=SNOWFLAKE

# redis\u914D\u7F6E
spring.redis.client-type=jedis
spring.redis.timeout=10000ms
spring.redis.host=${plato.redis.host}
spring.redis.port=${plato.redis.port}
spring.redis.password=${plato.redis.password}
spring.redis.database=10
spring.redis.jedis.pool.min-idle=8
spring.redis.jedis.pool.max-idle=128
spring.redis.jedis.pool.max-active=128
spring.redis.jedis.pool.max-wait=-1ms

# nacos\u670D\u52A1\u6CE8\u518C\u53D1\u73B0
spring.cloud.nacos.discovery.server-addr=${plato.cloud.nacos.host}:${plato.cloud.nacos.port}
spring.cloud.nacos.discovery.cluster-name=${plato.cloud.nacos.cluster-name}
spring.cloud.nacos.discovery.username=${plato.cloud.nacos.username}
spring.cloud.nacos.discovery.password=${plato.cloud.nacos.password}
spring.cloud.loadbalancer.nacos.enabled=true

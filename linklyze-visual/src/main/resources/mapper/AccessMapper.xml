<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linklyze.visual.mapper.AccessMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.linklyze.visual.model.DwsWideInfo">
        <result column="id" property="id" />
        <result column="code" property="code" />
        <result column="referer" property="referer" />
        <result column="account_no" property="accountNo" />
        <result column="ip" property="ip" />
        <result column="country" property="country" />
        <result column="province" property="province" />
        <result column="city" property="city" />
        <result column="isp" property="isp" />
        <result column="device_type" property="deviceType" />
        <result column="os" property="os" />
        <result column="browser_type" property="browserType" />
        <result column="device_manufacturer" property="deviceManufacturer" />
        <result column="timestamp" property="timestamp" />
        <result column="start" property="start" />
        <result column="end" property="end" />
        <result column="uv" property="uv" />
        <result column="pv" property="pv" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        code,
        referer,
        account_no,
        ip,
        country,
        province,
        city, isp, device_type, os, browser_type, device_manufacturer, `timestamp`, `start`, `end`, uv, pv
    </sql>

    <select id="region" resultType="com.linklyze.visual.vo.RegionStatsVO">
        SELECT country, province, sum(pv) as pv, sum(uv) as uv
        FROM access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
        AND toYYYYMMDD(`start`) &gt;= #{start,jdbcType=VARCHAR}
        AND toYYYYMMDD(`end`) &lt;= #{end,jdbcType=VARCHAR}
        GROUP BY country, province ORDER BY pv DESC;
    </select>

    <select id="type" resultType="com.linklyze.visual.model.TypeGroupByDO">
        SELECT device_type, os, browser_type, sum(pv) as pv, sum(uv) as uv
        FROM access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
          AND toYYYYMMDD(`start`) &gt;= #{start,jdbcType=VARCHAR}
          AND toYYYYMMDD(`end`) &lt;= #{end,jdbcType=VARCHAR}
        GROUP BY device_type, os, browser_type ORDER BY pv DESC;
    </select>

    <select id="trendByDay" resultType="com.linklyze.visual.model.TrendGroupByDO">
        select toYYYYMMDD(`start`) as `interval`,
        sum(uv) as uv, sum(pv) as pv,
        count( DISTINCT ip) ip
        from access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
        AND toYYYYMMDD(`start`) &gt;= #{start,jdbcType=VARCHAR}
        AND toYYYYMMDD(`end`)  &lt;= #{end,jdbcType=VARCHAR}
        GROUP BY `interval` ORDER BY `interval` DESC;
    </select>

    <select id="trendByHour" resultType="com.linklyze.visual.model.TrendGroupByDO">
        select toHour(`start`) as `interval`,
               sum(uv) as uv, sum(pv) as pv,
               count( DISTINCT ip) ip
        from access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
          AND toYYYYMMDD(`start`) = #{date,jdbcType=VARCHAR}
        GROUP BY `interval` ORDER BY `interval` DESC;
    </select>
    <select id="refererTopN" resultType="com.linklyze.visual.model.RefererGroupByDO">
        SELECT referer, sum(pv) as pv
        FROM access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
        AND toYYYYMMDD(`start`) &gt;= #{start,jdbcType=VARCHAR}
        AND toYYYYMMDD(`end`)  &lt;= #{end,jdbcType=VARCHAR}
        GROUP BY referer ORDER BY pv DESC LIMIT #{n,jdbcType=INTEGER};
    </select>
    <select id="pageRecord" resultType="com.linklyze.visual.model.DwsWideInfo">
        SELECT <include refid="Base_Column_List"/>
        FROM access_stats
        WHERE code = #{code,jdbcType=VARCHAR}
        ORDER BY `start` DESC LIMIT #{offset,jdbcType=INTEGER}, #{size,jdbcType=INTEGER};
    </select>

    <select id="pagRecordTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM access_stats
        WHERE code = #{code,jdbcType=VARCHAR} LIMIT #{maxLimit,jdbcType=INTEGER};
    </select>


</mapper>
